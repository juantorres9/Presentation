
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  0000011e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000076  00000000  00000000  00000139  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000041  00000000  00000000  000001af  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000a8  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000298  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000072  00000000  00000000  000002b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:


 int main(void)
  //
  {
SFIOR &=~(1<<PUD);//Pull Up enable for all Inputs
  6c:	80 b7       	in	r24, 0x30	; 48
  6e:	8b 7f       	andi	r24, 0xFB	; 251
  70:	80 bf       	out	0x30, r24	; 48
//SFIO |=(1<<PUD);//Pull Up disable for all Inputs
DDRA=0xF0;  
  72:	80 ef       	ldi	r24, 0xF0	; 240
  74:	8a bb       	out	0x1a, r24	; 26
                    //DDRA=1111 0000--1=OUTPUT  0=INPUT
PORTA=(1<<PORTA0)|(1<<PORTA1)|(1<<PORTA2)|(1<<PORTA3) ; //PORTA=0000 1111--0=NO PULLUP   1=PULLUP(EN ENTREE UNIQUEMENT)
  76:	8f e0       	ldi	r24, 0x0F	; 15
  78:	8b bb       	out	0x1b, r24	; 27

  while(1)
  {
	  if ((PINA&0X0F)==0X0F)
  7a:	89 b3       	in	r24, 0x19	; 25
  7c:	8f 70       	andi	r24, 0x0F	; 15
  7e:	8f 30       	cpi	r24, 0x0F	; 15
  80:	21 f4       	brne	.+8      	; 0x8a <main+0x1e>
	  {
	    PORTA |=(1<<PINA7); // PORTA= 1000 1111
  82:	df 9a       	sbi	0x1b, 7	; 27
		PORTA |=(1<<PINA6)|(1<<PINA5);// PORTA= 1110 1111
  84:	8b b3       	in	r24, 0x1b	; 27
  86:	80 66       	ori	r24, 0x60	; 96
  88:	03 c0       	rjmp	.+6      	; 0x90 <main+0x24>
		} 
	  else
	  {
	    PORTA &=~(1<<PINA7);// PORTA= 0000 1111
  8a:	df 98       	cbi	0x1b, 7	; 27
	    PORTA &=~(1<<PINA6)&~(1<<PINA5);//PORTA=0000 1111
  8c:	8b b3       	in	r24, 0x1b	; 27
  8e:	8f 79       	andi	r24, 0x9F	; 159
  90:	8b bb       	out	0x1b, r24	; 27
	  }
	  
	  if((PINA==0X1E)|(PINA==0X0E)){
  92:	89 b3       	in	r24, 0x19	; 25
  94:	99 b3       	in	r25, 0x19	; 25
  96:	8e 31       	cpi	r24, 0x1E	; 30
  98:	11 f0       	breq	.+4      	; 0x9e <main+0x32>
  9a:	9e 30       	cpi	r25, 0x0E	; 14
  9c:	11 f4       	brne	.+4      	; 0xa2 <main+0x36>
	   PORTA &=~(1<<PINA4);//Eteindre si  PINA= 0001 1110 OU 0000 1110
  9e:	dc 98       	cbi	0x1b, 4	; 27
  a0:	ec cf       	rjmp	.-40     	; 0x7a <main+0xe>
      }else{
	  PORTA |=(1<<PINA4);//Mettre PINA=1 ALLUMER TOUT LE TEMP
  a2:	dc 9a       	sbi	0x1b, 4	; 27
  a4:	ea cf       	rjmp	.-44     	; 0x7a <main+0xe>

000000a6 <_exit>:
  a6:	f8 94       	cli

000000a8 <__stop_program>:
  a8:	ff cf       	rjmp	.-2      	; 0xa8 <__stop_program>


gpio1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000009c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  000000f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000002b  00000000  00000000  00000110  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000009f  00000000  00000000  0000013b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000006c  00000000  00000000  000001da  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000b3  00000000  00000000  00000246  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000030  00000000  00000000  000002fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000008a  00000000  00000000  0000032c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 3a 00 	call	0x74	; 0x74 <main>
  64:	0c 94 4c 00 	jmp	0x98	; 0x98 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <timer0_init>:



void timer0_init(){
	//TCCR0:control registre  0000 1101
	TCCR0|=(1<<CS02)|(1<<CS00);//Prescalaire 1MHZ/1024
  6c:	83 b7       	in	r24, 0x33	; 51
  6e:	85 60       	ori	r24, 0x05	; 5
  70:	83 bf       	out	0x33, r24	; 51
	//TCCR0|=(1<<WGM01);//CTC mode
	//OCR0=Output compare
	//OCCR0=0xF4;//Limit de comptage 244
	
}
  72:	08 95       	ret

00000074 <main>:


int main(void)
{
	//DDRA=output
	DDRA=0x0F;// 0000 1111
  74:	8f e0       	ldi	r24, 0x0F	; 15
  76:	8a bb       	out	0x1a, r24	; 26
	DDRB=0x01;
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	87 bb       	out	0x17, r24	; 23
	//PORTA=etat Initial
	PORTA=0x00;
  7c:	1b ba       	out	0x1b, r1	; 27
	PORTB=0x00;
  7e:	18 ba       	out	0x18, r1	; 24



void timer0_init(){
	//TCCR0:control registre  0000 1101
	TCCR0|=(1<<CS02)|(1<<CS00);//Prescalaire 1MHZ/1024
  80:	83 b7       	in	r24, 0x33	; 51
  82:	85 60       	ori	r24, 0x05	; 5
  84:	83 bf       	out	0x33, r24	; 51
	
		//_delay_ms(1000);//attente 1s
		
		if(TCNT0>244){
			TCNT0=0;//reinitialiser comptage
			PORTB^=0X01;
  86:	91 e0       	ldi	r25, 0x01	; 1
	while(1){
		//PORTA^=0X0F;//XOR 0000 1111
	
		//_delay_ms(1000);//attente 1s
		
		if(TCNT0>244){
  88:	82 b7       	in	r24, 0x32	; 50
  8a:	85 3f       	cpi	r24, 0xF5	; 245
  8c:	e8 f3       	brcs	.-6      	; 0x88 <main+0x14>
			TCNT0=0;//reinitialiser comptage
  8e:	12 be       	out	0x32, r1	; 50
			PORTB^=0X01;
  90:	88 b3       	in	r24, 0x18	; 24
  92:	89 27       	eor	r24, r25
  94:	88 bb       	out	0x18, r24	; 24
  96:	f8 cf       	rjmp	.-16     	; 0x88 <main+0x14>

00000098 <_exit>:
  98:	f8 94       	cli

0000009a <__stop_program>:
  9a:	ff cf       	rjmp	.-2      	; 0x9a <__stop_program>
